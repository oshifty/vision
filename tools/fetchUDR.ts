import { promises as fs } from 'fs';
import { JSONSchema, compile } from 'json-schema-to-typescript';
import { Try } from '../src/lib/helpers';
import { format } from 'prettier';

async function main(): Promise<void> {
	const udrJsonSchema = await fetch('https://oshifty.gitlab.io/e173/udr-document.json').then(
		(res) => res.text()
	);

	const schema = Try<JSONSchema>(
		() => JSON.parse(udrJsonSchema),
		() => {
			throw new TypeError(`Error parsing JSON`);
		}
	);

	await fs.writeFile('./src/lib/udr.json', udrJsonSchema);

	const typeDefinitions = await compile(schema, 'udr');

	const currentTimestamp = new Date().toUTCString();

	let dtsFile = `/**
	 * E1.73 (Uniform Device Representation)
	 *
	 * This file is generated by \`tools/fetchUDR.ts\`
	 * @see https://oshifty.gitlab.io/e173/udr-document.json
	 * @updated ${currentTimestamp}
	 */

	${typeDefinitions}`;

	const options = await fs.readFile('.prettierrc', 'utf8').then((res) => JSON.parse(res));
	options.parser = 'typescript';
	dtsFile = await format(dtsFile, options);

	await fs.writeFile('src/lib/udr.d.ts', dtsFile);
}

main();
